#include <stdio.h>
#include <stdlib.h>

//#define UP		2, 8, 14, 20, 26
//#define DOWN		5, 11, 17, 23, 29
int	up[] 	= {2, 8, 14, 20, 26};
int down[]	= {5, 11, 17, 23, 29};


char 	**printposition(int position[0][2], char **map)
{
	map[position[0][0]][position[0][1]] = 'B';
	return (map);
}

int		upchecker(int colonne)
{
	int	index;

	index = 0;
	while (up[index] != '\0')
	{
		if(colonne == up[index])
			return (1);
		index++;
	}
	return (0);
}

int		downchecker(int colonne)
{
	int index;

	index = 0;
	while (down[index] != '\0')
	{
		if(colonne == down[index])
			return (1);
		index++;
	}
	return(0);
}

int		main(void)
{
	int i = 0;
	int x = 0;
	int bee_position[1][2] = {12, 1};
	char	**map;

	map = (char **)malloc((sizeof(char *) * 25) + 1);
	while ( i < 33)
	{
		map[i] = (char *)malloc((sizeof(char) * 32) + 1);
		i++;
	}
	map[i] = 0;
	i = 0;

	while (i < 26)
	{
		x = 0;
		while(x < 31)
		{
			map[i][x] = '.';
			x++;
		}
		map[i][x] = '\0';
		i++;
	}
	
	printf("TEST\n");
	while (1)
	{
		if ((upchecker(bee_position[0][1]) == 1) && (bee_position[0][1] != 1))
			bee_position[0][0] -= 1;
	/*	else if (bee_position[0][0] == (1 | 12) && (upchecker(bee_position[0][1]) == 0) && (downchecker(bee_position[0][1]) == 0))
			bee_position[0][1] += 1;
		else if (downchecker(bee_position[0][1]) == 1 &&  bee_position[0][0] != 12)
			bee_position[0][0] += 1;*/
		i = 0;
		printposition(bee_position, map);
		while(i < 25)
			printf("%s\n", map[i++]);
		printf("\n");
	}

	return (0);
}